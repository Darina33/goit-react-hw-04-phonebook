{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Documents/GitHub/goit-react-hw-04-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { nanoid } from 'nanoid';\nimport ContactForm from \"./ContactForm\";\nimport Contacts from \"./Contacts\";\nimport Filter from \"./Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n\n  const [contacts, setContacts] = useState(() => {\n    var _JSON$parse;\n\n    return (_JSON$parse = JSON.parse(localStorage.getItem('contacts'))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [];\n  });\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number\n    };\n    const isExist = contacts.map(contact => contact.name === name).includes(true);\n\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    setContacts(prevContacts => [contact, ...prevContacts]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(_ref => {\n      let {\n        id\n      } = _ref;\n      return id !== contactId;\n    }));\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(_ref2 => {\n      let {\n        name\n      } = _ref2;\n      return name.toLowerCase().includes(normalizedFilter);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n      onSubmit: addContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: filter,\n      onChange: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contacts, {\n      contacts: getVisibleContacts,\n      onDeleteContact: deleteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"c4jtiJl5r1rW/dtwE5Rt2U0Qu8s=\");\n\n_c = App;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/darina/Documents/GitHub/goit-react-hw-04-phonebook/src/components/App.jsx"],"names":["useState","useEffect","nanoid","ContactForm","Contacts","Filter","App","contacts","setContacts","JSON","parse","localStorage","getItem","window","setItem","stringify","filter","setFilter","addContact","name","number","contact","id","isExist","map","includes","alert","prevContacts","deleteContact","contactId","changeFilter","e","currentTarget","value","getVisibleContacts","normalizedFilter","toLowerCase"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,OAAO,SAASC,GAAT,GAAe;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,MAAM;AAAA;;AAC7C,0BAAOS,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAP,qDAAuD,EAAvD;AACD,GAFuC,CAAxC;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,MAAM,CAACF,YAAP,CAAoBG,OAApB,CAA4B,UAA5B,EAAwCL,IAAI,CAACM,SAAL,CAAeR,QAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMkB,UAAU,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACnC,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEpB,MAAM,EADI;AAEdiB,MAAAA,IAFc;AAGdC,MAAAA;AAHc,KAAhB;AAMA,UAAMG,OAAO,GAAGhB,QAAQ,CAACiB,GAAT,CAAaH,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAzC,EAA+CM,QAA/C,CAAwD,IAAxD,CAAhB;;AAEA,QAAIF,OAAJ,EAAa;AACXG,MAAAA,KAAK,CAAE,GAAEP,IAAK,0BAAT,CAAL;AACA;AACD;;AAEDX,IAAAA,WAAW,CAACmB,YAAY,IACtB,CAACN,OAAD,EAAU,GAAGM,YAAb,CADS,CAAX;AAGD,GAjBD;;AAmBE,QAAMC,aAAa,GAAGC,SAAS,IAAI;AACjCrB,IAAAA,WAAW,CAACD,QAAQ,CAACS,MAAT,CAAgB;AAAA,UAAC;AAAEM,QAAAA;AAAF,OAAD;AAAA,aAAYA,EAAE,KAAKO,SAAnB;AAAA,KAAhB,CAAD,CAAX;AACD,GAFD;;AAIA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBd,IAAAA,SAAS,CAACc,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAT;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,UAAMC,gBAAgB,GAAGnB,MAAM,CAACoB,WAAP,EAAzB;AAEA,WAAO7B,QAAQ,CAACS,MAAT,CAAgB;AAAA,UAAC;AAAEG,QAAAA;AAAF,OAAD;AAAA,aACrBA,IAAI,CAACiB,WAAL,GAAmBX,QAAnB,CAA4BU,gBAA5B,CADqB;AAAA,KAAhB,CAAP;AAGD,GAND;;AAQA,sBAAQ;AAAA,4BACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,eAEN,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEjB;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFM,eAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHM,eAIN,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAEF,MAAf;AAAuB,MAAA,QAAQ,EAAEc;AAAjC;AAAA;AAAA;AAAA;AAAA,YAJM,eAKN,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEI,kBAApB;AAAwC,MAAA,eAAe,EAAEN;AAAzD;AAAA;AAAA;AAAA;AAAA,YALM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAOD;;GArDatB,G;;KAAAA,G;AAqDb","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { nanoid } from 'nanoid'\nimport ContactForm from \"./ContactForm\";\nimport Contacts from \"./Contacts\";\nimport Filter from \"./Filter\";\n\nexport function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem('contacts')) ?? [];\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts]);\n\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const isExist = contacts.map(contact => contact.name === name).includes(true)\n\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return\n    }\n    \n    setContacts(prevContacts =>\n      [contact, ...prevContacts],\n    )\n  };\n    \n    const deleteContact = contactId => {\n      setContacts(contacts.filter(({ id }) => id !== contactId));\n    }\n    \n    const changeFilter = e => {\n      setFilter(e.currentTarget.value)\n    }\n    \n    const getVisibleContacts = () => {\n      const normalizedFilter = filter.toLowerCase();\n\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n\n    return (<div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <Contacts contacts={getVisibleContacts} onDeleteContact={deleteContact} />\n    </div>);\n  };"]},"metadata":{},"sourceType":"module"}