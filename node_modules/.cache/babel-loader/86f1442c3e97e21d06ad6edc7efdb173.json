{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Documents/GitHub/goit-react-hw-04-phonebook/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { nanoid } from 'nanoid';\nimport ContactForm from \"./ContactForm\";\nimport Contacts from \"./Contacts\";\nimport Filter from \"./Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [contacts, setContacts] = useState(() => {\n    var _JSON$parse;\n\n    return (_JSON$parse = JSON.parse(localStorage.getItem('contacts'))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [];\n  });\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number\n    };\n    const isExist = contacts.map(contact => contact.name === name).includes(true);\n\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    setContacts(prev => [contact, ...prev]);\n\n    const deleteContact = contactId => {\n      setContacts(contacts.filter(_ref => {\n        let {\n          id\n        } = _ref;\n        return id !== contactId;\n      }));\n    };\n\n    const changeFilter = e => {\n      setFilter(e.currentTarget.value);\n    };\n\n    const getVisibleContacts = () => {\n      const normalizedFilter = filter.toLowerCase();\n      return contacts.filter(_ref2 => {\n        let {\n          name\n        } = _ref2;\n        return name.toLowerCase().includes(normalizedFilter);\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onSubmit: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: filter,\n        onChange: changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Contacts, {\n        contacts: getVisibleContacts,\n        onDeleteContact: deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  };\n}\n\n_s(App, \"h0tWWyyw8nIQWHih7oLoxSoEml8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/darina/Documents/GitHub/goit-react-hw-04-phonebook/src/components/App.jsx"],"names":["useState","useEffect","nanoid","ContactForm","Contacts","Filter","App","contacts","setContacts","JSON","parse","localStorage","getItem","filter","setFilter","window","setItem","stringify","addContact","name","number","contact","id","isExist","map","includes","alert","prev","deleteContact","contactId","changeFilter","e","currentTarget","value","getVisibleContacts","normalizedFilter","toLowerCase"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,MAAM;AAAA;;AAC7C,0BAAOS,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAP,qDAAuD,EAAvD;AACD,GAFuC,CAAxC;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,MAAM,CAACJ,YAAP,CAAoBK,OAApB,CAA4B,UAA5B,EAAwCP,IAAI,CAACQ,SAAL,CAAeV,QAAf,CAAxC;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;;AAIA,QAAMW,UAAU,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACnC,UAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEpB,MAAM,EADI;AAEdiB,MAAAA,IAFc;AAGdC,MAAAA;AAHc,KAAhB;AAMA,UAAMG,OAAO,GAAGhB,QAAQ,CAACiB,GAAT,CAAaH,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAzC,EAA+CM,QAA/C,CAAwD,IAAxD,CAAhB;;AAEA,QAAIF,OAAJ,EAAa;AACXG,MAAAA,KAAK,CAAE,GAAEP,IAAK,0BAAT,CAAL;AACA;AACD;;AACDX,IAAAA,WAAW,CAACmB,IAAI,IACd,CAACN,OAAD,EAAU,GAAGM,IAAb,CADS,CAAX;;AAIA,UAAMC,aAAa,GAAGC,SAAS,IAAI;AACjCrB,MAAAA,WAAW,CAACD,QAAQ,CAACM,MAAT,CAAgB;AAAA,YAAC;AAAES,UAAAA;AAAF,SAAD;AAAA,eAAYA,EAAE,KAAKO,SAAnB;AAAA,OAAhB,CAAD,CAAX;AACD,KAFD;;AAKA,UAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBjB,MAAAA,SAAS,CAACiB,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAT;AACD,KAFD;;AAIA,UAAMC,kBAAkB,GAAG,MAAM;AAC/B,YAAMC,gBAAgB,GAAGtB,MAAM,CAACuB,WAAP,EAAzB;AAEA,aAAO7B,QAAQ,CAACM,MAAT,CAAgB;AAAA,YAAC;AAAEM,UAAAA;AAAF,SAAD;AAAA,eACrBA,IAAI,CAACiB,WAAL,GAAmBX,QAAnB,CAA4BU,gBAA5B,CADqB;AAAA,OAAhB,CAAP;AAGD,KAND;;AAQA,wBAAQ;AAAA,8BACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADM,eAEN,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEjB;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFM,eAGN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHM,eAIN,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEL,MAAf;AAAuB,QAAA,QAAQ,EAAEiB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAJM,eAKN,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEI,kBAApB;AAAwC,QAAA,eAAe,EAAEN;AAAzD;AAAA;AAAA;AAAA;AAAA,cALM;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAOD,GAzCD;AA0CD;;GArDQtB,G;;KAAAA,G","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { nanoid } from 'nanoid'\nimport ContactForm from \"./ContactForm\";\nimport Contacts from \"./Contacts\";\nimport Filter from \"./Filter\";\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem('contacts')) ?? [];\n  });\n\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const isExist = contacts.map(contact => contact.name === name).includes(true)\n\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n      return\n    }\n    setContacts(prev =>\n      [contact, ...prev],\n    );\n    \n    const deleteContact = contactId => {\n      setContacts(contacts.filter(({ id }) => id !== contactId));\n    }\n    \n    \n    const changeFilter = e => {\n      setFilter(e.currentTarget.value)\n    }\n    \n    const getVisibleContacts = () => {\n      const normalizedFilter = filter.toLowerCase();\n\n      return contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n\n    return (<div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <Contacts contacts={getVisibleContacts} onDeleteContact={deleteContact} />\n    </div>);\n  };\n}"]},"metadata":{},"sourceType":"module"}