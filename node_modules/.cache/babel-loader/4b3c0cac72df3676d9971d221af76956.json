{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Documents/GitHub/goit-react-hw-03-phonebook/src/components/App.jsx\";\nimport React from \"react\";\nimport { nanoid } from 'nanoid';\nimport ContactForm from \"./ContactForm\";\nimport Contacts from \"./Contacts\";\nimport Filter from \"./Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.addContact = _ref => {\n      let {\n        name,\n        number\n      } = _ref;\n      const isExist = this.state.contacts.map(contact => contact.name === name).includes(true);\n\n      if (isExist) {\n        alert(`${name} is already in contacts.`);\n        return;\n      }\n\n      const contact = {\n        id: nanoid(),\n        name,\n        number\n      };\n      this.setState(_ref2 => {\n        let {\n          contacts\n        } = _ref2;\n        return {\n          contacts: [contact, ...contacts]\n        };\n      });\n    };\n\n    this.deleteContact = contactId => {\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== contactId)\n      }));\n    };\n\n    this.changeFilter = e => {\n      this.setState({\n        filter: e.currentTarget.value\n      });\n    };\n\n    this.getVisibleContacts = () => {\n      const normalizedFilter = this.state.filter.toLowerCase();\n      return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n    };\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({\n        contacts: parsedContacts\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    const addContact = this.addContact;\n    const changeFilter = this.state.changeFilter;\n    const deleteContact = this.deleteContact;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onSubmit: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: this.state.filter,\n        onChange: changeFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Contacts, {\n        contacts: visibleContacts,\n        onDeleteContact: deleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/darina/Documents/GitHub/goit-react-hw-03-phonebook/src/components/App.jsx"],"names":["React","nanoid","ContactForm","Contacts","Filter","App","Component","state","contacts","id","name","number","filter","addContact","isExist","map","contact","includes","alert","setState","deleteContact","contactId","prevState","changeFilter","e","currentTarget","value","getVisibleContacts","normalizedFilter","toLowerCase","componentDidMount","localStorage","getItem","parsedContacts","JSON","parse","componentDidUpdate","prevProps","nextContacts","prevContacts","setItem","stringify","render","visibleContacts"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { nanoid } from 'nanoid'\nimport ContactForm from \"./ContactForm\";\nimport Contacts from \"./Contacts\";\nimport Filter from \"./Filter\";\n\nexport class App extends React.Component {\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n      filter: '',\n  }\n\n  componentDidMount() { \n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n\n    const nextContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem('contacts', JSON.stringify(nextContacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    const isExist = this.state.contacts.map(contact => contact.name === name).includes(true)\n\n    if (isExist) {\n  alert(`${name} is already in contacts.`);\n  return\n}\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }))\n  }\n\n  changeFilter = e => {\n    this.setState({filter: e.currentTarget.value})\n  }\n\n    getVisibleContacts = () => {\n      const normalizedFilter = this.state.filter.toLowerCase();\n\n      return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter))\n    };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    const addContact = this.addContact;\n    const changeFilter = this.state.changeFilter;\n    const deleteContact = this.deleteContact;\n\n    return <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={this.state.filter} onChange={changeFilter} />\n      <Contacts contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </div>\n    };\n}\n"]},"metadata":{},"sourceType":"module"}