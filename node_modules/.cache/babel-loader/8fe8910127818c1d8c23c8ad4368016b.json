{"ast":null,"code":"var _jsxFileName = \"/Users/darina/Documents/GitHub/goit-react-hw-04-phonebook/src/components/ContactForm/ContactForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from './ContactsForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ContactForm(_ref) {\n  _s();\n\n  let {\n    onSubmit\n  } = _ref;\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: css.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: css.label,\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.input,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        onChange: handleChange,\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: css.label,\n      children: [\"Number\", /*#__PURE__*/_jsxDEV(\"input\", {\n        className: css.input,\n        type: \"tel\",\n        name: \"number\",\n        value: number,\n        onChange: handleChange,\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: css.button,\n      type: \"submit\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this);\n}\n\n_s(ContactForm, \"mgYk2feJE7Nd8w88JvjzPww6GtA=\");\n\n_c = ContactForm;\nContactForm.propTypes = {\n  onSubmit: PropTypes.func\n};\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/darina/Documents/GitHub/goit-react-hw-04-phonebook/src/components/ContactForm/ContactForm.jsx"],"names":["useState","PropTypes","css","ContactForm","onSubmit","name","setName","number","setNumber","handleChange","e","value","target","handleSubmit","preventDefault","reset","form","label","input","button","propTypes","func"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;;;AAGA,SAASC,WAAT,OAAkC;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAEhC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMS,YAAY,GAAGC,CAAC,IAAI;AACxB,UAAM;AAAEL,MAAAA,IAAF;AAAQM,MAAAA;AAAR,QAAkBD,CAAC,CAACE,MAA1B;;AAEA,YAAQP,IAAR;AACE,WAAK,MAAL;AACEC,QAAAA,OAAO,CAACK,KAAD,CAAP;AACA;;AAEF,WAAK,QAAL;AACEH,QAAAA,SAAS,CAACG,KAAD,CAAT;AACA;;AAEF;AACE;AAVJ;AAYD,GAfD;;AAiBA,QAAME,YAAY,GAAGH,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACI,cAAF;AAEAV,IAAAA,QAAQ,CAACC,IAAD,EAAOE,MAAP,CAAR;AACAQ,IAAAA,KAAK;AACN,GALD;;AAOA,QAAMA,KAAK,GAAG,MAAM;AAClBT,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAHD;;AAKE,sBAAQ;AAAM,IAAA,SAAS,EAAEN,GAAG,CAACc,IAArB;AAA2B,IAAA,QAAQ,EAAEH,YAArC;AAAA,4BACN;AAAO,MAAA,SAAS,EAAEX,GAAG,CAACe,KAAtB;AAAA,sCACE;AAAO,QAAA,SAAS,EAAEf,GAAG,CAACgB,KAAtB;AACJ,QAAA,IAAI,EAAC,MADD;AAEJ,QAAA,IAAI,EAAC,MAFD;AAGJ,QAAA,KAAK,EAAEb,IAHH;AAIJ,QAAA,QAAQ,EAAEI,YAJN;AAKJ,QAAA,OAAO,EAAC,wHALJ;AAMJ,QAAA,KAAK,EAAC,wIANF;AAOJ,QAAA,QAAQ;AAPJ;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,eAWN;AAAO,MAAA,SAAS,EAAEP,GAAG,CAACe,KAAtB;AAAA,wCACE;AAAO,QAAA,SAAS,EAAEf,GAAG,CAACgB,KAAtB;AACJ,QAAA,IAAI,EAAC,KADD;AAEJ,QAAA,IAAI,EAAC,QAFD;AAGJ,QAAA,KAAK,EAAEX,MAHH;AAIJ,QAAA,QAAQ,EAAEE,YAJN;AAKJ,QAAA,OAAO,EAAC,wFALJ;AAMJ,QAAA,KAAK,EAAC,8FANF;AAOJ,QAAA,QAAQ;AAPJ;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXM,eAqBN;AAAQ,MAAA,SAAS,EAAEP,GAAG,CAACiB,MAAvB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBM;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAuBH;;GAzDQhB,W;;KAAAA,W;AA2DTA,WAAW,CAACiB,SAAZ,GAAwB;AACtBhB,EAAAA,QAAQ,EAAEH,SAAS,CAACoB;AADE,CAAxB;AAIA,eAAelB,WAAf","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport css from './ContactsForm.module.css';\n\n\nfunction ContactForm({ onSubmit}) {\n \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      \n      case 'number':\n        setNumber(value);\n        break;\n      \n      default:\n        return;\n    }\n  };\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    reset();\n  }\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  }\n\n    return (<form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label} >Name\n        <input className={css.input} \n    type=\"text\"\n    name=\"name\"\n    value={name}\n    onChange={handleChange}\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    required\n      /></label>\n      <label className={css.label}>Number\n        <input className={css.input}\n    type=\"tel\"\n    name=\"number\"\n    value={number}\n    onChange={handleChange}\n    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n    required\n        /></label>\n      <button className={css.button} type=\"submit\">Add contact</button>\n    </form>)\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm"]},"metadata":{},"sourceType":"module"}